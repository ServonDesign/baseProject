{"version":3,"sources":["styleguide/base.less","base/mixins/grid_mixins.less","base/mixins/flexmixins.less","base/mixins/prefixmixins.less","base/variables/typevars.less","base/animation/easing.less","styleguide/svg.less"],"names":[],"mappings":"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","sourcesContent":[".colours{\r\n\t.nested-container();\r\n\tdiv{\r\n\t\twidth: 200px;\r\n\t\theight: 100px;\r\n\t\tmargin-bottom: 10px;\r\n\t\tborder: 1px solid;\r\n\t\tposition: relative;\r\n\t\t&:after{\r\n\t\t\tcontent: 'test';\r\n\t\t\tposition: absolute;\r\n\t\t\tbottom: 10px;\r\n\t\t\tleft: 10px;\r\n\t\t}\r\n\t}\r\n\tdiv.textcolor{\r\n\t\tbackground: @text-color;\r\n\t\t&:after{\r\n\t\t\tcontent: ~'\"@text-color: ' @text-color ~'\"';\r\n\t\t\tcolor: #fff;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.font{\r\n\tfont-size: @base-font-size;\r\n\tmargin-bottom: 10px;\r\n\tfont-family: @font-family;\r\n\t&:after{\r\n\t\tcontent: ~'\" - ' @font-family ~'\"';\r\n\t}\r\n\r\n\t&-serif{\r\n\t\tmargin-bottom: 10px;\r\n\t\tfont-family: @font-family-serif;\r\n\t\t&:after{\r\n\t\t\tcontent: ~'\" - ' @font-family-serif ~'\"';\r\n\t\t}\r\n\t}\r\n\r\n\t&-norm{\r\n\t\tfont-style: normal;\r\n\t}\r\n\r\n\t&-italic{\r\n\t\tfont-style: italic;\r\n\t}\r\n\r\n\t&-100{ font-weight: 100; }\r\n\t&-200{ font-weight: 200; }\r\n\t&-300{ font-weight: 300; }\r\n\t&-400{ font-weight: 400; }\r\n\t&-500{ font-weight: 500; }\r\n\t&-600{ font-weight: 600; }\r\n\t&-700{ font-weight: 700; }\r\n\t&-800{ font-weight: 800; }\r\n\t&-900{ font-weight: 900; }\r\n}\r\n\r\n.animation{\r\n\t.base-column-p();\r\n\tbackground: #ccc;\r\n\tpadding: 15px;\r\n\tmargin-top: 15px;\r\n\tmargin-bottom: 15px;\r\n\r\n\t&-fade{\r\n\t\topacity: 1;\r\n\t\t.transition(opacity 0.3s @easeIn);\r\n\r\n\t\t&:hover{\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t&-movement{\r\n\t\tposition: relative;\r\n\r\n\t\t&-bar{\r\n\t\t\tposition: absolute;\r\n\t\t\twidth: 15px;\r\n\t\t\theight: 100%;\r\n\t\t\tleft: 0;\r\n\t\t\ttop: 0;\r\n\t\t\tbackground: #666;\r\n\t\t\t.transition(left 0.8s @easeIn);\r\n\t\t}\r\n\r\n\t\t&:hover &-bar{\r\n\t\t\tleft: calc(100% ~\" -\" 15px);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.ratio{\r\n\t&-test{\r\n\t\tbackground: #ccc;\r\n\r\n\t\t&-container{\r\n\t\t\t.column-m(6, none);\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t}\r\n\t}\r\n}\r\n","/* stylelint-disable at-rule-name-case, selector-combinator-space-after, block-no-empty, block-closing-brace-newline-before */\r\n//==========\r\n// Container\r\n//==========\r\n\r\n.container(@fluid: none, @gutterType: @default-gutterType) when (@fluid = fluid){\r\n\t#container-helpers.basic-container();\r\n\r\n\t@media (min-width: @container-gutter-breakpoint){\r\n\t\tpadding-left: @fluid-gutter;\r\n\t\tpadding-right: @fluid-gutter;\r\n\t}\r\n}\r\n\r\n.container(@fluid: none, @gutterType: @default-gutterType) when (@fluid = fluid) and (@gutterType = pullin){\r\n\t#container-helpers.basic-container();\r\n\r\n\t@media (min-width: @container-gutter-breakpoint){\r\n\t\tpadding-left: @fluid-pull-in-gutter;\r\n\t\tpadding-right: @fluid-pull-in-gutter;\r\n\t}\r\n}\r\n\r\n.container(@fluid: none, @gutterType: @default-gutterType) when (default()){\r\n\t#container-helpers.basic-container();\r\n\tmax-width: @max-container-width;\r\n\r\n\t@media (min-width: @container-gutter-breakpoint){\r\n\t\tpadding-left: @gutter;\r\n\t\tpadding-right: @gutter;\r\n\t}\r\n}\r\n\r\n.nested-container(){\r\n\t#container-helpers.nested-container();\r\n}\r\n\r\n#container-helpers{\r\n\t.nested-container(){\r\n\t\twidth: 100%;\r\n\t\t.flexbox();\r\n\t\t.flex-wrap(wrap);\r\n\t\t.align-content(start);\r\n\t}\r\n\r\n\t.basic-container(){\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\t.nested-container();\r\n\t}\r\n}\r\n\r\n//========\r\n// Columns\r\n//========\r\n.base-column(@gutterType: @default-gutterType, @gutterSize: @column-gutter-half){\r\n\t@gridWidth: 100%;\r\n\t.gutter(@gutterSize, none, @gutterType);\r\n\t#column-helpers.getWidthType(@gutterType);\r\n\r\n\t@rules();\r\n}\r\n\r\n.base-column-nogutter(){\r\n\t@gridWidth: 100%;\r\n\t@gutterType: padding;\r\n\t#column-helpers.getWidthType(@gutterType);\r\n}\r\n\r\n.base-column-m(){\r\n\t@gridWidth: 100%;\r\n\t@gutterType: margin;\r\n\t.gutter(@column-gutter-half, none, @gutterType);\r\n\t#column-helpers.getWidthType(@gutterType);\r\n\r\n\t@rules();\r\n}\r\n\r\n.base-column-p(){\r\n\t@gridWidth: 100%;\r\n\t@gutterType: padding;\r\n\t.gutter(@column-gutter-half, none, @gutterType);\r\n\t#column-helpers.getWidthType(@gutterType);\r\n\r\n\t@rules();\r\n}\r\n\r\n.column(@columns: @max-columns, @breakpoint: @default-breakpoint, @gutterType: @default-gutterType, @gutterSize: @column-gutter-half){\r\n\t.gutter(@gutterSize, @breakpoint, @gutterType);\r\n\t#column-helpers.getColumnWidth(@columns, @breakpoint, @gutterType);\r\n}\r\n\r\n.column-nogutter(@columns: @max-columns, @breakpoint: @default-breakpoint){\r\n\t#column-helpers.getColumnWidth-nogutter(@columns, @breakpoint, padding);\r\n}\r\n\r\n.column-push(@columns: @max-columns, @breakpoint: @default-breakpoint, @gutterType: @default-gutterType, @pushColumns: 1, @gutterSize: @column-gutter-half){\r\n\t.push(@pushColumns, @gutterSize, @breakpoint, @gutterType);\r\n\t#column-helpers.getColumnWidth(@columns, @breakpoint, @gutterType);\r\n}\r\n\r\n.column-m(@columns: @max-columns, @breakpoint: @default-breakpoint){\r\n\t@gutterType: margin;\r\n\t.gutter(@column-gutter-half, @breakpoint, @gutterType);\r\n\t.column(@columns, @breakpoint, @gutterType);\r\n}\r\n\r\n.column-p(@columns: @max-columns, @breakpoint: @default-breakpoint){\r\n\t@gutterType: padding;\r\n\t.gutter(@column-gutter-half, @breakpoint, @gutterType);\r\n\t.column(@columns, @breakpoint, @gutterType);\r\n}\r\n\r\n#column-helpers{\r\n\t.getColumnWidth(@columns, @breakpoint, @gutterType) when (@breakpoint = none){\r\n\t\t.cacluateWidth(@columns);\r\n\t\t.getWidthType(@gutterType);\r\n\r\n\t\t@rules();\r\n\t}\r\n\r\n\t.getColumnWidth(@columns, @breakpoint, @gutterType) when (default()){\r\n\t\t.getBreakpoint(@breakpoint);\r\n\t\t.getBreakpointRules(@breakpoint);\r\n\r\n\t\t@media(min-width: @breakpointValue){\r\n\t\t\t.cacluateWidth(@columns);\r\n\t\t\t.getWidthType(@gutterType);\r\n\r\n\t\t\t@breakpointExtraRules();\r\n\t\t}\r\n\t}\r\n\r\n\t.getColumnWidth-nogutter(@columns, @breakpoint, @gutterType) when (@breakpoint = none){\r\n\t\t.cacluateWidth(@columns);\r\n\t\t.getWidthType(@gutterType);\r\n\t}\r\n\r\n\t.getColumnWidth-nogutter(@columns, @breakpoint, @gutterType) when (default()){\r\n\t\t.getBreakpoint(@breakpoint);\r\n\r\n\t\t@media(min-width: @breakpointValue){\r\n\t\t\t.cacluateWidth(@columns);\r\n\t\t\t.getWidthType(@gutterType);\r\n\t\t}\r\n\t}\r\n\r\n\t.getWidthType(@gutterType) when (@gutterType = padding){\r\n\t\twidth: @gridWidth;\r\n\t}\r\n\r\n\t.getWidthType(@gutterType) when (@gutterType = margin){\r\n\t\twidth: calc(@gridWidth ~\" -\" @column-gutter-calc-size);\r\n\t}\r\n\r\n\t.cacluateWidth(@columns) when (@columns >= @max-columns){\r\n\t\t@gridWidth: 100%;\r\n\t}\r\n\t.cacluateWidth(@columns) when (@columns < 1){\r\n\t\t@gridWidth: percentage(1 / @max-columns);\r\n\t}\r\n\t.cacluateWidth(@columns) when (default()){\r\n\t\t@gridWidth: percentage(@columns / @max-columns);\r\n\t}\r\n\r\n\t.getBreakpoint(@breakpoint) when (@breakpoint = xs){\r\n\t\t@breakpointValue: @xs-min;\r\n\t}\r\n\t.getBreakpoint(@breakpoint) when (@breakpoint = sm){\r\n\t\t@breakpointValue: @sm-min;\r\n\t}\r\n\t.getBreakpoint(@breakpoint) when (@breakpoint = md){\r\n\t\t@breakpointValue: @md-min;\r\n\t}\r\n\t.getBreakpoint(@breakpoint) when (@breakpoint = lg){\r\n\t\t@breakpointValue: @lg-min;\r\n\t}\r\n\t.getBreakpoint(@breakpoint) when (@breakpoint = xlg){\r\n\t\t@breakpointValue: @xlg-min;\r\n\t}\r\n\r\n\t.getBreakpointRules(@breakpoint) when (@breakpoint = xs){\r\n\t\t@breakpointExtraRules: @xs-rules;\r\n\t}\r\n\t.getBreakpointRules(@breakpoint) when (@breakpoint = sm){\r\n\t\t@breakpointExtraRules: @sm-rules;\r\n\t}\r\n\t.getBreakpointRules(@breakpoint) when (@breakpoint = md){\r\n\t\t@breakpointExtraRules: @md-rules;\r\n\t}\r\n\t.getBreakpointRules(@breakpoint) when (@breakpoint = lg){\r\n\t\t@breakpointExtraRules: @lg-rules;\r\n\t}\r\n\t.getBreakpointRules(@breakpoint) when (@breakpoint = xlg){\r\n\t\t@breakpointExtraRules: @xlg-rules;\r\n\t}\r\n}\r\n\r\n//=========\r\n// Gutter\r\n//=========\r\n\r\n.gutter(@gutter-size: @column-gutter-half, @breakpoint: @default-breakpoint, @gutterType: @default-gutterType){\r\n\t#gutter-helpers.setGutterRules(@gutter-size, @gutter-size, @gutterType);\r\n\t#gutter-helpers.setBreakpointRules(@breakpoint);\r\n\t@column-gutter-calc-size: (@gutter-size * 2);\r\n}\r\n\r\n.gutter-p(@gutter-size: @column-gutter-half, @breakpoint: @default-breakpoint){\r\n\t.gutter(@gutter-size, @breakpoint, padding);\r\n}\r\n\r\n.gutter-m(@gutter-size: @column-gutter-half, @breakpoint: @default-breakpoint){\r\n\t.gutter(@gutter-size, @breakpoint, margin);\r\n}\r\n\r\n.push(@column: 1, @gutter-size: @column-gutter-half, @breakpoint: @default-breakpoint, @gutterType: @default-gutterType){\r\n\t#column-helpers.cacluateWidth(@column);\r\n\t@gutter-size-left: calc(@gridWidth ~\" +\" @gutter-size);\r\n\t@gutter-size-right: @gutter-size;\r\n\t#gutter-helpers.setGutterRules(@gutter-size-left, @gutter-size-right, @gutterType);\r\n\t#gutter-helpers.setBreakpointRules(@breakpoint);\r\n\t@column-gutter-calc-size: (@gutter-size * 2);\r\n}\r\n\r\n#gutter-helpers{\r\n\t.setGutterRules(@gutter-size-left, @gutter-size-right, @gutterType) when (@gutter-size > 0){\r\n\t\t.getGutterType(@gutterType);\r\n\r\n\t\t@gutterRules:{\r\n\t\t\t@{gutterRuleLeft}: @gutter-size-left;\r\n\t\t\t@{gutterRuleRight}: @gutter-size-right;\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t.setGutterRules(@gutter-size-left, @gutter-size-right, @gutterType) when (default()){\r\n\t\t.getGutterType(@gutterType);\r\n\r\n\t\t@gutterRules: {};\r\n\r\n\t}\r\n\r\n\t.getGutterType(@gutterType) when (@gutterType = padding){\r\n\t\t@gutterRuleLeft: padding-left;\r\n\t\t@gutterRuleRight: padding-right;\r\n\t}\r\n\r\n\t.getGutterType(@gutterType) when (@gutterType = margin){\r\n\t\t@gutterRuleLeft: margin-left;\r\n\t\t@gutterRuleRight: margin-right;\r\n\t}\r\n\r\n\t.setBreakpointRules(@breakpoint) when (@breakpoint = xs){\r\n\t\t@xs-rules: @gutterRules;\r\n\t}\r\n\t.setBreakpointRules(@breakpoint) when (@breakpoint = sm){\r\n\t\t@sm-rules: @gutterRules;\r\n\t}\r\n\t.setBreakpointRules(@breakpoint) when (@breakpoint = md){\r\n\t\t@md-rules: @gutterRules;\r\n\t}\r\n\t.setBreakpointRules(@breakpoint) when (@breakpoint = lg){\r\n\t\t@lg-rules: @gutterRules;\r\n\t}\r\n\t.setBreakpointRules(@breakpoint) when (@breakpoint = xlg){\r\n\t\t@xlg-rules: @gutterRules;\r\n\t}\r\n\t.setBreakpointRules(@breakpoint) when (default()){\r\n\t\t@rules: @gutterRules;\r\n\t}\r\n}\r\n/* stylelint-enable */\r\n","// display: inline-flex //\n// applies to flex container\n\n.inline-flexbox(){\n\t// 2009 spec\n\tdisplay: -webkit-box;\n\tdisplay: -moz-box;\n\tdisplay: -ms-box;\n\tdisplay: -o-box;\n\tdisplay: box;\n\t// tweener -ms- spec\n\tdisplay: -ms-inline-flexbox;\n\t// 2013 spec\n\tdisplay: -webkit-inline-flex;\n\tdisplay: -moz-inline-flex;\n\tdisplay: -ms-inline-flex;\n\tdisplay: -o-inline-flex;\n\tdisplay: inline-flex;\n}\n// display: flex //\n// applies to flex container\n\n.flexbox(){\n\t// 2009 spec\n\tdisplay: -webkit-box;\n\tdisplay: -moz-box;\n\tdisplay: -ms-box;\n\tdisplay: -o-box;\n\tdisplay: box;\n\t// // tweener -ms- spec\n\t// display: -webkit-flexbox;\n\t// display: -moz-flexbox;\n\tdisplay: -ms-flexbox;\n\t// display: -o-flexbox;\n\t// display: flexbox;\n\t// 2013 spec\n\tdisplay: -webkit-flex;\n\tdisplay: -moz-flex;\n\tdisplay: -ms-flex;\n\tdisplay: -o-flex;\n\tdisplay: flex;\n}\n\n// flex //\n\n// applies to flex-items\n\n// specifying how items flex, in shorthand (like background property is shorthand)\n\n// 2009 spec is box-flex, and only accepts numbers with decimals\n// tweener -ms- spec and 2013 spec both use flex and contain 3 values instead of just one\n// tweener spec has different names for their values but the values do the same thing\n\n// 2009 spec only accepts a number (not just integer) as an input\n\n// tweener -ms- spec works as follows\n// -ms-flex: <positive-flex> <negative-flex> <preferred-size>\n// positive-flex is integer indicating whether item should grow\n// negative-flex is integer indicating whether item should shrink\n// preferred-size uses any valid value for width or height (i.e. px, em, rem, %)\n\n// 2013 spec works as follows\n// flex: <flex-grow> <flex-shrink> <flex-basis>\n// flex-grow is integer indicating whether item should grow\n// flex-shrink is integer indicating whether item should shrink\n// flex-basis  uses any valid value for width (i.e. px, em, rem, %)\n\n// handling when 2013 or tweener spec is 'none' instead of shorthand values\n.flex(@spec; @flex) when (@flex = none) and (@spec = 2013),\n(@spec = tweener){\n\t// tweener -ms- spec is same as 2013\n\t// 2013 spec\n\t-webkit-flex: 0 0 auto;\n\t-moz-flex: 0 0 auto;\n\t-ms-flex: 0 0 auto;\n\t-o-flex: 0 0 auto;\n\tflex: 0 0 auto;\n}\n\n// handling when 2013 or tweener spec is 'auto' instead of shorthand values\n.flex(@spec; @flex) when (@flex = auto) and (@spec = 2013),\n(@spec = tweener){\n\t// tweener -ms- spec is same as 2013\n\t// 2013 spec\n\t-webkit-flex: 1 1 auto;\n\t-moz-flex: 1 1 auto;\n\t-ms-flex: 1 1 auto;\n\t-o-flex: 1 1 auto;\n\tflex: 1 1 auto;\n}\n\n// handling when 2013 or tweener spec is 'initial' instead of shorthand values\n.flex(@spec; @flex) when (@flex = initial) and (@spec = 2013),\n(@spec = tweener){\n\t// tweener -ms- spec is same as 2013\n\t// 2013 spec\n\t-webkit-flex: 0 1 auto;\n\t-moz-flex: 0 1 auto;\n\t-ms-flex: 0 1 auto;\n\t-o-flex: 0 1 auto;\n\tflex: 0 1 auto;\n}\n\n// handling 2009 'none' value\n.flex(@spec; @grow) when (@grow = none) and (@spec = 2009){\n\t// 2009 spec\n\t-webkit-box-flex: 0;\n\t-moz-box-flex: 0;\n\t-ms-box-flex: 0;\n\t-o-box-flex: 0;\n\tbox-flex: 0;\n}\n\n// handling remaining 2009 scenarios where it is not 'none'\n.flex(@spec; @grow) when (isnumber(@grow)) and (@spec = 2009){\n\t// 2009 spec (accepts only 1 integer value)\n\t-webkit-box-flex: @grow;\n\t-moz-box-flex: @grow;\n\t-ms-box-flex: @grow;\n\t-o-box-flex: @grow;\n\tbox-flex: @grow;\n}\n\n// this should cover all other scenarios that are not 2009 and/or not 'none'\n.flex(@spec; @grow; @shrink; @basis) when not (@spec = 2009){\n\t// tweener -ms- spec is same as 2013\n\t// 2013 spec\n\t-webkit-flex: @grow @shrink @basis;\n\t-moz-flex: @grow @shrink @basis;\n\t-ms-flex: @grow @shrink @basis;\n\t-o-flex: @grow @shrink @basis;\n\tflex: @grow @shrink @basis;\n}\n\n// flex-direction //\n\n// applies to flex container\n\n// 2009 spec\n.flex-direction(@direction) when (@direction = row){\n\t-webkit-box-orient: horizontal;\n\t-moz-box-orient: horizontal;\n\t-ms-box-orient: horizontal;\n\t-o-box-orient: horizontal;\n\tbox-orient: horizontal;\n}\n// 2009 spec\n.flex-direction(@direction) when (@direction = row-reverse){\n\t-webkit-box-orient: horizontal;\n\t-moz-box-orient: horizontal;\n\t-ms-box-orient: horizontal;\n\t-o-box-orient: horizontal;\n\tbox-orient: horizontal;\n\t-webkit-box-direction: reverse;\n\t-moz-box-direction: reverse;\n\t-ms-box-direction: reverse;\n\t-o-box-direction: reverse;\n\tbox-direction: reverse;\n}\n// 2009 spec\n.flex-direction(@direction) when (@direction = column){\n\t-webkit-box-orient: vertical;\n\t-moz-box-orient: vertical;\n\t-ms-box-orient: vertical;\n\t-o-box-orient: vertical;\n\tbox-orient: vertical;\n}\n// 2009 spec\n.flex-direction(@direction) when (@direction = column-reverse){\n\t-webkit-box-orient: vertical;\n\t-moz-box-orient: vertical;\n\t-ms-box-orient: vertical;\n\t-o-box-orient: vertical;\n\tbox-orient: vertical;\n\t-webkit-box-direction: reverse;\n\t-moz-box-direction: reverse;\n\t-ms-box-direction: reverse;\n\t-o-box-direction: reverse;\n\tbox-direction: reverse;\n}\n// 2013 spec\n.flex-direction(@direction){\n\t-webkit-flex-direction: @direction;\n\t-moz-flex-direction: @direction;\n\t-ms-flex-direction: @direction;\n\t-o-flex-direction: @direction;\n\tflex-direction: @direction;\n}\n\n// order //\n\n// applies to flex-items\n\n// specifies the order of an individual flex item within a container; this is an override of natural DOM order\n\n// 2009 spec is box-ordinal-group and starts at 1\n// tweener -ms- spec is flex-order and starts at 0\n// 2013 spec is order and starts at 0\n\n.order(@order){\n\t// 2009 spec\n\t-webkit-box-ordinal-group: @order + 1;\n\t-moz-box-ordinal-group: @order + 1;\n\t-ms-box-ordinal-group: @order + 1;\n\t-o-box-ordinal-group: @order + 1;\n\tbox-ordinal-group: @order + 1;\n\t// tweener -ms- spec\n\t-ms-flex-order: @order;\n\t// 2013 spec\n\t-webkit-order: @order;\n\t-moz-order: @order;\n\t-ms-order: @order;\n\t-o-order: @order;\n\torder: @order;\n}\n\n// flex-wrap //\n\n// applies to flex container\n\n// 2009 property is box-lines\n// single == nowrap\n// multiple == wrap\n// no equivalent to wrap-reverse\n// initial = single\n\n// 2009 spec\n.flex-wrap(@wrap-method) when (@wrap-method = wrap){\n\t-webkit-lines: multiple;\n\t-webkit-box-lines: multiple;\n\t-moz-box-lines: multiple;\n\t-ms-box-lines: multiple;\n\t-o-box-lines: multiple;\n\tbox-lines: multiple;\n}\n\n//box lines doesn't have wrap reverse, so use box-direction\n// 2009 spec\n.flex-wrap(@wrap-method) when (@wrap-method = wrap-reverse){\n\t-webkit-lines: multiple;\n\t-webkit-box-lines: multiple;\n\t-moz-box-lines: multiple;\n\t-ms-box-lines: multiple;\n\t-o-box-lines: multiple;\n\tbox-lines: multiple;\n\t-webkit-box-direction: reverse;\n\t-moz-box-direction: reverse;\n\t-ms-box-direction: reverse;\n\t-o-box-direction: reverse;\n\tbox-direction: reverse;\n}\n\n// 2009 spec\n.flex-wrap(@wrap-method) when (@wrap-method = nowrap){\n\t-webkit-lines: single;\n\t-webkit-box-lines: single;\n\t-moz-box-lines: single;\n\t-ms-box-lines: single;\n\t-o-box-lines: single;\n\tbox-lines: single;\n}\n\n// 2013 spec is flex-wrap instead of box-lines\n// nowrap = single line LTR\n// wrap = multiple lines LTR\n// wrap-reverse = multiple lines, reversed children LTR\n// initial = nowrap\n// not inherited by default; spec inherit to force it\n\n// 2013 spec\n.flex-wrap(@wrap-method){\n\t-webkit-flex-wrap: @wrap-method;\n\t-moz-flex-wrap: @wrap-method;\n\t-ms-flex-wrap: @wrap-method;\n\t-o-flex-wrap: @wrap-method;\n\tflex-wrap: @wrap-method;\n}\n\n// align-items //\n\n// applies to flex container\n\n// Specifies the alignment of flex items within a container on the cross axis\n\n// 2009 property is box-align\n// tweener -ms- spec is flex-align\n// start == flex-start\n// end == flex-end\n// center == center\n// baseline == baseline\n// stretch = stretch\n\n.align-items(@align-item-method) when (@align-item-method = start){\n\t// 2009 spec\n\t-webkit-box-align: start;\n\t-moz-box-align: start;\n\t-ms-box-align: start;\n\t-o-box-align: start;\n\tbox-align: start;\n\t// tweener -ms- spec\n\t-ms-flex-align: start;\n\t// 2013 spec\n\t-webkit-align-items: flex-start;\n\t-moz-align-items: flex-start;\n\t-ms-align-items: flex-start;\n\t-o-align-items: flex-start;\n\talign-items: flex-start;\n}\n\n.align-items(@align-item-method) when (@align-item-method = end){\n\t// 2009 spec\n\t-webkit-box-align: end;\n\t-moz-box-align: end;\n\t-ms-box-align: end;\n\t-o-box-align: end;\n\tbox-align: end;\n\t// tweener -ms- spec\n\t-ms-flex-align: end;\n\t// 2013 spec\n\t-webkit-align-items: flex-end;\n\t-moz-align-items: flex-end;\n\t-ms-align-items: flex-end;\n\t-o-align-items: flex-end;\n\talign-items: flex-end;\n}\n\n// for center, baseline, and stretch, which are the same in all specs\n.align-items(@align-item-method) when\n(@align-item-method = center),\n(@align-item-method = baseline),\n(@align-item-method = stretch){\n\t// 2009 spec\n\t-webkit-box-align: @align-item-method;\n\t-moz-box-align: @align-item-method;\n\t-ms-box-align: @align-item-method;\n\t-o-box-align: @align-item-method;\n\tbox-align: @align-item-method;\n\t// tweener -ms- spec\n\t-ms-flex-align: @align-item-method;\n\t// 2013 spec\n\t-webkit-align-items: @align-item-method;\n\t-moz-align-items: @align-item-method;\n\t-ms-align-items: @align-item-method;\n\t-o-align-items: @align-item-method;\n\talign-items: @align-item-method;\n}\n\n// align-self //\n\n// applies to flex-items\n\n// specifying an override alignment of an individual flex-item\n// within a container on the cross axis\n\n// 2009 spec does not have an equivalent fallback\n// tweener -ms- spec is flex-item-align\n// auto == auto\n// start == flex-start\n// end == flex-end\n// center == center\n// baseline == baseline\n// stretch = stretch\n\n.align-self(@align-self-method) when (@align-self-method = start){\n\t// tweener -ms- spec\n\t-ms-flex-item-align: @align-self-method;\n\tflex-item-align: @align-self-method;\n\t// 2013 spec\n\t-webkit-align-self: flex-start;\n\t-moz-align-self: flex-start;\n\t-ms-align-self: flex-start;\n\t-o-align-self: flex-start;\n\talign-self: flex-start;\n}\n\n.align-self(@align-self-method) when (@align-self-method = end){\n\t// tweener -ms- spec\n\t-ms-flex-item-align: @align-self-method;\n\tflex-item-align: @align-self-method;\n\t// 2013 spec\n\t-webkit-align-self: flex-end;\n\t-moz-align-self: flex-end;\n\t-ms-align-self: flex-end;\n\t-o-align-self: flex-end;\n\talign-self: flex-end;\n}\n\n// for auto, center, baseline, and stretch, which are the same in both specs\n.align-self(@align-self-method) when\n(@align-self-method = auto),\n(@align-self-method = center),\n(@align-self-method = baseline),\n(@align-self-method = stretch){\n\t// tweener -ms- spec\n\t-ms-flex-item-align: @align-self-method;\n\tflex-item-align: @align-self-method;\n\t// 2013 spec\n\t-webkit-align-self: @align-self-method;\n\t-moz-align-self: @align-self-method;\n\t-ms-align-self: @align-self-method;\n\t-o-align-self: @align-self-method;\n\talign-self: @align-self-method;\n}\n\n// Align Content //\n\n// applies to flex container\n\n// Flex line alignment: specifying alignment of flex lines (not individual items) along the cross-axis\n// note: only applies when there is more than one line of content\n\n// 2009 spec does not have an equivalent fallback\n// microsoft property is flex-line-pack\n// flex-end == end\n// flex-start == start\n// space-between == justify\n// space-around == distribute\n// center == center\n// stretch == stretch\n\n.align-content(@align-content-method) when (@align-content-method = start){\n\t// tweener -ms- spec\n\t-ms-flex-line-pack: @align-content-method;\n\t// 2013 spec\n\t-webkit-align-content: flex-start;\n\t-moz-align-content: flex-start;\n\t-o-align-content: flex-start;\n\talign-content: flex-start;\n}\n\n.align-content(@align-content-method) when (@align-content-method = end){\n\t// tweener -ms- spec\n\t-ms-flex-line-pack: @align-content-method;\n\t// 2013 spec\n\t-webkit-align-content: flex-end;\n\t-moz-align-content: flex-end;\n\t-o-align-content: flex-end;\n\talign-content: flex-end;\n}\n\n.align-content(@align-content-method) when (@align-content-method = space-between){\n\t// tweener -ms- spec\n\t-ms-flex-line-pack: justify;\n\t// 2013 spec\n\t-webkit-align-content: space-between;\n\t-moz-align-content: space-between;\n\t-o-align-content: space-between;\n\talign-content: space-between;\n}\n\n.align-content(@align-content-method) when (@align-content-method = space-around){\n\t// tweener -ms- spec\n\t-ms-flex-line-pack: distribute;\n\t// 2013 spec\n\t-webkit-align-content: space-around;\n\t-moz-align-content: space-around;\n\t-o-align-content: space-around;\n\talign-content: space-around;\n}\n\n.align-content(@align-content-method) when\n(@align-content-method = center),\n(@align-content-method = stretch){\n\t// tweener -ms- spec\n\t-ms-flex-line-pack: @align-content-method;\n\t// 2013 spec\n\t-webkit-align-content: @align-content-method;\n\t-moz-align-content: @align-content-method;\n\t-o-align-content: @align-content-method;\n\talign-content: @align-content-method;\n}\n\n// Justify Content //\n\n// applies to flex container\n\n// Main Axis Alignment: specifying the alignment of flex items within a container on the primary axis\n\n// 2009 spec == box-pack\n// tweener MS spec == flex-pack\n// current spec == justify-content\n\n// flex-start == start\n// center == center\n// flex-end == end\n// space-between == justify\n// space-around == distribute\n// 2009 spec does not support 'distribute' or 'space-around' property\n\n.justify-content(@justify-method) when (@justify-method = start){\n\t//2009\n\t-webkit-box-pack: @justify-method;\n\t-moz-box-pack: @justify-method;\n\t-ms-box-pack: @justify-method;\n\t-o-box-pack: @justify-method;\n\tbox-pack: @justify-method;\n\t//tweener -ms-\n\t-ms-flex-pack: @justify-method;\n\t// current spec\n\t-webkit-justify-content: flex-start;\n\t-moz-justify-content: flex-start;\n\t-ms-justify-content: flex-start;\n\t-o-justify-content: flex-start;\n\tjustify-content: flex-start;\n}\n\n.justify-content(@justify-method) when (@justify-method = end){\n\t// 2009 spec\n\t-webkit-box-pack: @justify-method;\n\t-moz-box-pack: @justify-method;\n\t-ms-box-pack: @justify-method;\n\t-o-box-pack: @justify-method;\n\tbox-pack: @justify-method;\n\t// tweener -ms- spec\n\t-ms-flex-pack: @justify-method;\n\t// 2013 spec\n\t-webkit-justify-content: flex-end;\n\t-moz-justify-content: flex-end;\n\t-ms-justify-content: flex-end;\n\t-o-justify-content: flex-end;\n\tjustify-content: flex-end;\n}\n\n.justify-content(@justify-method) when (@justify-method = center){\n\t// 2009 spec\n\t-webkit-box-pack: center;\n\t-moz-box-pack: center;\n\t// tweener -ms- spec\n\t-ms-flex-pack: center;\n\t// 2013 spec\n\t-webkit-justify-content: center;\n\t-moz-justify-content: center;\n\t-ms-justify-content: center;\n\t-o-justify-content: center;\n\tjustify-content: center;\n}\n\n.justify-content(@justify-method) when (@justify-method = space-between){\n\t// 2009 spec\n\t-webkit-box-pack: justify;\n\t-moz-box-pack: justify;\n\t// tweener -ms- spec\n\t-ms-flex-pack: justify;\n\t// 2013 spec\n\t-webkit-justify-content: space-between;\n\t-moz-justify-content: space-between;\n\t-ms-justify-content: space-between;\n\t-o-justify-content: space-between;\n\tjustify-content: space-between;\n}\n\n.justify-content(@justify-method) when (@justify-method = space-around){\n\t// 2009 spec has no equivalent\n\t// tweener -ms- spec\n\t-ms-flex-pack: distribute;\n\t// 2013 spec\n\t-webkit-justify-content: space-around;\n\t-moz-justify-content: space-around;\n\t-ms-justify-content: space-around;\n\t-o-justify-content: space-around;\n\tjustify-content: space-around;\n}\n\n// flex-grow //\n\n// applies to flex-items\n\n// controls how an individual flex item in a flex container will grow\n// flex grow factor is a multiplier that determines how much a flex item grows relative to the other\n// items in the container\n\n// flex-grow is the first of three shorthand values in the flex property\n\n// 2009 spec has box-flex which is an effectively equivalent concept to flex-grow, since it only\n// controls positive growth of flex items\n\n.flex-grow(@multiplier){\n\t// 2009 spec\n\t-webkit-box-flex: @multiplier;\n\t// 2013 spec and tweener -ms- spec\n\t-webkit-flex-grow: @multiplier;\n\t-moz-box-flex: @multiplier;\n\t-ms-flex: @multiplier 1 auto;\n\tflex-grow: @multiplier;\n}\n\n// flex-shrink //\n\n// applies to flex-items\n\n// controls how an individual flex item in a flex container will shrink\n// flex shrink factor is a multiplier that determines how much a flex item shrinks relative to the other\n// items in the container\n\n// flex-shrink is the second of three shorthand values in the flex property\n\n// 2009 spec does not have an equivalent to flex-shrink\n// controls positive growth of flex items\n\n.flex-shrink(@multiplier){\n\t// 2009 spec does not have an equivalent to flex-shrink\n\t// 2013 spec and tweener -ms- spec\n\t-webkit-flex-shrink: @multiplier;\n\t-ms-flex: 0 @multiplier auto;\n\tflex-shrink: @multiplier;\n}\n\n// flex-basis //\n\n// applies to flex-items\n\n// controls initial width of a flex item, as specified by a standard width value, or 'auto'\n\n// flex-basis is the third of three shorthand values in the flex property\n\n// 2009 spec does not have an equivalent to flex-basis\n\n.flex-basis(@width){\n\t// 2009 spec does not have an equivalent to flex-basis\n\t// 2013 spec and tweener -ms- spec\n\t-webkit-flex-basis: @width;\n\t-ms-flex: 0 1 @width;\n\tflex-basis: @width;\n}\n\n// flex-flow //\n\n// applies to flex container\n\n// flex-flow is actually a shorthand combination of flex-direction and flex-wrap\n\n// flex-direction accepts row | row-reverse | column | column-reverse\n// flex-wrap accepts nowrap | wrap | wrap-reverse\n\n.flex-flow (@direction; @rest...){\n\t-webkit-flex-flow: @direction @rest;\n\t-ms-flex-flow: @direction @rest;\n\tflex-flow: @direction @rest;\n}\n","/* stylelint-disable rule-non-nested-empty-line-before */\r\n//---------------------------------------------------\r\n//  LESS Prefixer altered\r\n//---------------------------------------------------\r\n//\r\n//  All of the CSS3 fun, none of the prefixes!\r\n//\r\n//  As a rule, you can use the CSS properties you\r\n//  would expect just by adding a '.':\r\n//\r\n//  box-shadow => .box-shadow(@args)\r\n//\r\n//  Also, when shorthand is available, arguments are\r\n//  not parameterized. Learn CSS, not LESS Prefixer.\r\n//\r\n//  -------------------------------------------------\r\n//  TABLE OF CONTENTS\r\n//  (*) denotes a syntax-sugar helper\r\n//  -------------------------------------------------\r\n//\r\n//      .keyframes(@name; @args)\r\n//      .animation(@args)\r\n//          .animation-delay(@delay)\r\n//          .animation-direction(@direction)\r\n//          .animation-duration(@duration)\r\n//          .animation-fill-mode(@mode)\r\n//          .animation-iteration-count(@count)\r\n//          .animation-name(@name)\r\n//          .animation-play-state(@state)\r\n//          .animation-timing-function(@function)\r\n//      .columns(@args)\r\n//          .column-count(@count)\r\n//          .column-gap(@gap)\r\n//          .column-rule(@args)\r\n//          .column-width(@width)\r\n//      .transform(@args)\r\n//          .transform-origin(@args)\r\n//          .transform-style(@style)\r\n//          .rotate(@deg)\r\n//          .scale(@factor)\r\n//          .translate(@x,@y)\r\n//          .translate3d(@x,@y,@z)\r\n//          .translateHardware(@x,@y) *\r\n//      .transition(@args)\r\n//          .transition-delay(@delay)\r\n//          .transition-duration(@duration)\r\n//          .transition-property(@property)\r\n//          .transition-timing-function(@function)\r\n//      Flexbox: \r\n//          .flexbox()\r\n//          .inline-flexbox()\r\n//              .flex-flow(@direction: row, @wrap: nowrap)\r\n//                  .flex-direction(@direction: row)\r\n//                  .flex-wrap(@wrap: nowrap)\r\n//              .justify-content(@justification)\r\n//              .align-items(@mode)\r\n//              .align-content(@alignment)\r\n//              .flex(@args: none)\r\n//                  .flex-grow(@grow: 1)\r\n//                  .flex-shrink(@shrink: 1)\r\n//                  .flex-basis(@basis: auto)\r\n//              .order(@num: 0)\r\n//              .align-self(@align: auto)\r\n//\r\n//  Credit to LESS Elements for the motivation and\r\n//  to CSS3Please.com for implementation.\r\n//\r\n//  Copyright (c) 2012 Joel Sutherland\r\n//  MIT Licensed:\r\n//  http://www.opensource.org/licenses/mit-license.php\r\n//\r\n//---------------------------------------------------\r\n\r\n\r\n// Animation\r\n.keyframes(@name; @args) {\r\n    @-webkit-keyframes @name { @args(); }\r\n    @keyframes @name { @args(); }\r\n}\r\n.animation(@args) {\r\n    -webkit-animation: @args;\r\n    animation: @args;\r\n}\r\n.animation-delay(@delay) {\r\n    -webkit-animation-delay: @delay;\r\n    animation-delay: @delay;\r\n}\r\n.animation-direction(@direction) {\r\n    -webkit-animation-direction: @direction;\r\n    -o-animation-direction: @direction;\r\n}\r\n.animation-duration(@duration) {\r\n    -webkit-animation-duration: @duration;\r\n    -o-animation-duration: @duration;\r\n}\r\n.animation-fill-mode(@mode) {\r\n    -webkit-animation-fill-mode: @mode;\r\n    animation-fill-mode: @mode;\r\n}\r\n.animation-iteration-count(@count) {\r\n    -webkit-animation-iteration-count: @count;\r\n    animation-iteration-count: @count;\r\n}\r\n.animation-name(@name) {\r\n    -webkit-animation-name: @name;\r\n    animation-name: @name;\r\n}\r\n.animation-play-state(@state) {\r\n    -webkit-animation-play-state: @state;\r\n    animation-play-state: @state;\r\n}\r\n.animation-timing-function(@function) {\r\n    -webkit-animation-timing-function: @function;\r\n    animation-timing-function: @function;\r\n}\r\n\r\n// Columns\r\n\r\n.columns(@args) {\r\n    -webkit-columns: @args;\r\n    -moz-columns: @args;\r\n    columns: @args;\r\n}\r\n.column-count(@count) {\r\n    -webkit-column-count: @count;\r\n    -moz-column-count: @count;\r\n    column-count: @count;\r\n}\r\n.column-gap(@gap) {\r\n    -webkit-column-gap: @gap;\r\n    -moz-column-gap: @gap;\r\n    column-gap: @gap;\r\n}\r\n.column-width(@width) {\r\n    -webkit-column-width: @width;\r\n    -moz-column-width: @width;\r\n    column-width: @width;\r\n}\r\n.column-rule(@args) {\r\n    -webkit-column-rule: @args;\r\n    -moz-column-rule: @args;\r\n    column-rule: @args;\r\n}\r\n\r\n// Transforms\r\n\r\n.transform(@args) {\r\n    -webkit-transform: @args;\r\n    -ms-transform: @args;\r\n    transform: @args;\r\n}\r\n.transform-origin(@args) {\r\n    -webkit-transform-origin: @args;\r\n    -ms-transform-origin: @args;\r\n    transform-origin: @args;\r\n}\r\n.transform-style(@style) {\r\n    -webkit-transform-style: @style;\r\n    -ms-transform-style: @style;\r\n    transform-style: @style;\r\n}\r\n.rotate(@deg:45deg){\r\n    .transform(rotate(@deg));\r\n}\r\n.scale(@factor:.5){\r\n    .transform(scale(@factor));\r\n}\r\n.translate(@x,@y){\r\n    .transform(translate(@x,@y));\r\n}\r\n.translate3d(@x,@y,@z) {\r\n    .transform(translate3d(@x,@y,@z));\r\n}\r\n.translateHardware(@x,@y) {\r\n    .translate(@x,@y);\r\n    -webkit-transform: translate3d(@x,@y,0);\r\n    -o-transform: translate3d(@x,@y,0);\r\n    transform: translate3d(@x,@y,0);\r\n}\r\n\r\n\r\n// Transitions\r\n\r\n.transition(@args:200ms) {\r\n    transition: @args;\r\n}\r\n.transition-delay(@delay:0) {\r\n    transition-delay: @delay;\r\n}\r\n.transition-duration(@duration:200ms) {\r\n    transition-duration: @duration;\r\n}\r\n.transition-property(@property:all) {\r\n    transition-property: @property;\r\n}\r\n.transition-timing-function(@function:ease) {\r\n    transition-timing-function: @function;\r\n}\r\n\r\n// Flexbox\r\n.flexbox() {\r\n    display: -ms-flexbox;\r\n    display: -webkit-flex;\r\n    display: flex;\r\n}\r\n.inline-flexbox() {\r\n    display: -ms-inline-flexbox;\r\n    display: -webkit-inline-flex;\r\n    display: inline-flex;\r\n}\r\n.flex-flow(@direction: row, @wrap: nowrap) {\r\n    -moz-flex-flow: @direction @wrap;\r\n    -ms-flex-direction: @direction;\r\n    -ms-flex-wrap: @wrap;\r\n    -webkit-flex-flow: @direction @wrap;\r\n    flex-flow: @direction @wrap;\r\n}\r\n.align-content(@alignment) {\r\n    -moz-align-content: @alignment;\r\n    -ms-align-content: @alignment;\r\n    -webkit-align-content: @alignment;\r\n    align-content: @alignment;\r\n}\r\n.flex-direction(@direction: row) {\r\n    -webkit-flex-direction: @direction;\r\n    -moz-flex-direction: @direction;\r\n    -ms-flex-direction: @direction;\r\n    flex-direction: @direction;\r\n}\r\n.flex-wrap(@wrap: nowrap) {\r\n    -webkit-flex-wrap: @wrap;\r\n    -moz-flex-wrap: @wrap;\r\n    -ms-flex-wrap: @wrap;\r\n    flex-wrap: @wrap;\r\n}\r\n.justify-content(@justification) {\r\n    -webkit-box-pack: @justification;\r\n    -moz-box-pack: @justification;\r\n    -ms-flex-pack: replace(@justification, \"flex-\", \"\");\r\n    -webkit-justify-content: @justification;\r\n    justify-content: @justification;\r\n}\r\n.align-items(@mode) {\r\n    -webkit-box-align: @mode;\r\n    -moz-box-align: @mode;\r\n    -ms-flex-align: @mode;\r\n    -webkit-align-items: @mode;\r\n    align-items: @mode;\r\n}\r\n.flex(@args: none) {\r\n    -webkit-flex: @args;\r\n    -moz-flex: @args;\r\n    -ms-flex: @args;\r\n    -webkit-flex: @args;\r\n    flex: @args;\r\n\r\n}\r\n.order(@order: 0) {\r\n    -webkit-box-ordinal-group: @order;\r\n    -moz-box-ordinal-group: @order;\r\n    -ms-box-ordinal-group: @order;\r\n    -ms-flex-order: @order;\r\n    -webkit-order: @order;\r\n    -moz-order: @order;\r\n    -ms-order: @order;\r\n    order: @order;\r\n}\r\n.flex-grow(@grow: 1) {\r\n    -webkit-flex-grow: @grow;\r\n    -moz-flex-grow: @grow;\r\n    -ms-flex-grow: @grow;\r\n    -webkit-flex-grow: @grow;\r\n    flex-grow: @grow;\r\n}\r\n.flex-shrink(@shrink: 1) {\r\n    -webkit-flex-shrink: @shrink;\r\n    -moz-flex-shrink: @shrink;\r\n    -ms-flex-shrink: @shrink;\r\n    -webkit-flex-shrink: @shrink;\r\n    flex-shrink: @shrink;\r\n}\r\n.flex-basis(@basis: auto) {\r\n    -webkit-flex-basis: @basis;\r\n    -moz-flex-basis: @basis;\r\n    -ms-flex-basis: @basis;\r\n    -webkit-flex-basis: @basis;\r\n    flex-basis: @basis;\r\n}\r\n.align-self(@align: auto) {\r\n    -webkit-align-self: @align;\r\n    -moz-align-self: @align;\r\n    -ms-align-self: @align;\r\n    -webkit-align-self: @align;\r\n    align-self: @align;\r\n}\r\n/* stylelint-enable */\r\n","//== Typography ==//\r\n\r\n//font family\r\n@font-family:           'Helvetica Neue', 'Roboto', 'helveticaui';\r\n@font-family-serif:     'Helvetica Neue', 'Roboto', 'helveticaui';\r\n@icon-font:             \"FontAwesome\";\r\n@base-font-size:        1.6rem;\r\n\r\n//scale factors -- don't change\r\n@minor-second:          1.067;\r\n@major-second:          1.125;\r\n@minor-third:           1.2;\r\n@major-third:           1.25;\r\n@perfect-fourth:        1.333;\r\n@dim-fifth:             1.414;\r\n@perfect-fifth:         1.5;\r\n@minor-sixth:           1.6;\r\n@golden-section:        1.618;\r\n\r\n//margin ratios\r\n@margin-top:            1em;\r\n@margin-bottom:         0.66em;\r\n@margin-top-neg:        -0.25em;\r\n\r\n//lineheight ratios\r\n@h-line-height:         1.2;\r\n@p-line-height:         1.5;\r\n@line-height:           @p-line-height;\r\n\r\n//header vars\r\n@headings-font-family:  @font-family;\r\n@headings-font-weight:  700;\r\n@headings-color:        inherit;\r\n@strong-weight:         700;\r\n\r\n//fontsize\r\n.typeVars(@base-scale: @perfect-fourth, @base-size: @base-font-size){\r\n\t//base font size and line height\r\n\t@font-size: @base-size;\r\n\t@scale-factor: @base-scale;\r\n\r\n\t//heading font size\r\n\t@font-size-h1: round((@font-size * 10) * pow(@scale-factor, 3)) / 10;\r\n\t@font-size-h2: round((@font-size * 10) * pow(@scale-factor, 2)) / 10;\r\n\t@font-size-h3: round((@font-size * 10) * pow(@scale-factor, 1)) / 10;\r\n\t@font-size-h4: round((@font-size * 10) * pow(@scale-factor, 0.5)) / 10;\r\n\t@font-size-h5: @font-size;\r\n\t@font-size-h6: round((@font-size * 10) * pow(@scale-factor, -1)) / 10;\r\n}\r\n","//easing ideas\r\n\r\n// ease in with a small bounce, used on big slide ins etc\r\n@easeInBounce: \t\tcubic-bezier(0.03, 0.93, 0.72, 1.1);\r\n\r\n//basic ease in\r\n@easeIn: \t\t\tcubic-bezier(0.3, 0.15, 0.18, 1);\r\n",".svg-list{\r\n\t.flexbox();\r\n\t.flex-wrap(wrap);\r\n}\r\n\r\n.svg-item{\r\n\t.column-m(2);\r\n\t.flexbox();\r\n\t.flex-direction(column);\r\n\t.align-items(center);\r\n\r\n\tcursor: pointer;\r\n\t&--fill{\r\n\t\tfill: #666;\r\n\t}\r\n\t&--stroke{\r\n\t\tstroke: #666;\r\n\t}\r\n}\r\n"],"file":"styleguide.css","sourceRoot":"/source/"}